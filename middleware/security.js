// middleware/security.js
// –ü—Ä–æ–¥–∞–∫—à–Ω –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å middleware

import rateLimit from 'express-rate-limit';
import helmet from 'helmet';
import compression from 'compression';

/**
 * –ë–∞–∑–æ–≤—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ Helmet
 */
export function configureHelmet() {
    return helmet({
        contentSecurityPolicy: {
            directives: {
                defaultSrc: ['\'self\''],
                styleSrc: ['\'self\'', '\'unsafe-inline\'', 'https://fonts.googleapis.com'],
                fontSrc: ['\'self\'', 'https://fonts.gstatic.com'],
                scriptSrc: ['\'self\''],
                imgSrc: ['\'self\'', 'data:', 'https:'],
                connectSrc: ['\'self\''],
                frameSrc: ['\'none\''],
                objectSrc: ['\'none\''],
                upgradeInsecureRequests: process.env.NODE_ENV === 'production' ? [] : null,
            },
        },
        crossOriginEmbedderPolicy: false, // –û—Ç–∫–ª—é—á–∞–µ–º –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ —Å EJS
    });
}

/**
 * Rate limiting –¥–ª—è API endpoints
 */
export function configureRateLimit() {
    return rateLimit({
        windowMs: 15 * 60 * 1000, // 15 –º–∏–Ω—É—Ç
        max: 100, // –º–∞–∫—Å–∏–º—É–º 100 –∑–∞–ø—Ä–æ—Å–æ–≤ –∑–∞ –æ–∫–Ω–æ
        message: {
            error: '–°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–æ–≤ —Å —ç—Ç–æ–≥–æ IP. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.',
            retryAfter: 15 * 60 // —Å–µ–∫—É–Ω–¥—ã
        },
        standardHeaders: true,
        legacyHeaders: false,
        skip: (req) => {
            // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º rate limiting –¥–ª—è —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤
            return req.path.startsWith('/public') || 
                   req.path.startsWith('/css') || 
                   req.path.startsWith('/js') || 
                   req.path.startsWith('/images');
        }
    });
}

/**
 * –°—Ç—Ä–æ–≥–∏–π rate limiting –¥–ª—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
 */
export function configureAuthRateLimit() {
    return rateLimit({
        windowMs: 15 * 60 * 1000, // 15 –º–∏–Ω—É—Ç
        max: 5, // –º–∞–∫—Å–∏–º—É–º 5 –ø–æ–ø—ã—Ç–æ–∫ –≤—Ö–æ–¥–∞ –∑–∞ –æ–∫–Ω–æ
        message: {
            error: '–°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –ø–æ–ø—ã—Ç–æ–∫ –≤—Ö–æ–¥–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —á–µ—Ä–µ–∑ 15 –º–∏–Ω—É—Ç.',
            retryAfter: 15 * 60
        },
        standardHeaders: true,
        legacyHeaders: false,
        skipSuccessfulRequests: true, // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫ –ø—Ä–∏ —É—Å–ø–µ—à–Ω–æ–º –≤—Ö–æ–¥–µ
    });
}

/**
 * GZIP —Å–∂–∞—Ç–∏–µ –¥–ª—è production
 */
export function configureCompression() {
    return compression({
        level: 6, // –£—Ä–æ–≤–µ–Ω—å —Å–∂–∞—Ç–∏—è (1-9)
        threshold: 1024, // –°–∂–∏–º–∞—Ç—å —Ñ–∞–π–ª—ã –±–æ–ª—å—à–µ 1KB
        filter: (req, res) => {
            // –ù–µ —Å–∂–∏–º–∞—Ç—å –µ—Å–ª–∏ –∫–ª–∏–µ–Ω—Ç –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç
            if (req.headers['x-no-compression']) {
                return false;
            }
            // –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π —Ñ–∏–ª—å—Ç—Ä
            return compression.filter(req, res);
        }
    });
}

/**
 * Middleware –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
 */
export function securityLogger() {
    return (req, res, next) => {
        // –õ–æ–≥–∏—Ä—É–µ–º –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã
        const suspiciousPatterns = [
            /\.\./,  // Path traversal
            /<script/i,  // XSS attempt
            /union.*select/i,  // SQL injection
            /javascript:/i,  // JavaScript protocol
        ];

        const isSuspicious = suspiciousPatterns.some(pattern => 
            pattern.test(req.url) || 
            pattern.test(req.body ? JSON.stringify(req.body) : '') ||
            pattern.test(req.query ? JSON.stringify(req.query) : '')
        );

        if (isSuspicious) {
            console.warn('üö® –ü–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—ã–π –∑–∞–ø—Ä–æ—Å:', {
                ip: req.ip,
                url: req.url,
                method: req.method,
                userAgent: req.get('User-Agent'),
                timestamp: new Date().toISOString()
            });
        }

        next();
    };
}

/**
 * Middleware –¥–ª—è —Å–∫—Ä—ã—Ç–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å–µ—Ä–≤–µ—Ä–µ
 */
export function hideServerInfo() {
    return (req, res, next) => {
        res.removeHeader('X-Powered-By');
        res.setHeader('Server', 'Deutsch-Trainer');
        next();
    };
} 