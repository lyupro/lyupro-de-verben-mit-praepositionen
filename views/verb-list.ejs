<!-- views/verb-list.ejs -->
<!DOCTYPE html>
<html>
  <head>
    <title>Список глаголов</title>
    <link rel="stylesheet" href="/stylesheets/base.css">
    <link rel="stylesheet" href="/stylesheets/header.css">
    <link rel="stylesheet" href="/stylesheets/search.css">
    <link rel="stylesheet" href="/stylesheets/alphabet.css">
    <link rel="stylesheet" href="/stylesheets/verb-list.css">
    <link rel="stylesheet" href="/stylesheets/pagination.css">
    <style>
        /* Здесь можно добавить дополнительные стили для этой страницы */
    </style>
  </head>
  <body>
    <div class="container">
        <h1>Выберите глагол</h1>
        <div class="search-container">
            <input type="text" id="searchInput" placeholder="Поиск глагола">
        </div>
        <div class="search-results-container">
            <div id="searchResults" class="search-results"></div>
        </div>

        <div class="alphabet">
            <% alphabet.forEach(letter => { %>
                <% if (letterAvailability[letter]) { %>
                    <a href="/verb-list/letter/<%= letter %>"><%= letter %></a>
                <% } else { %>
                    <span class="disabled"><%= letter %></span>
                <% } %>
            <% }) %>
        </div>

        <div class="verb-list">
            <% verbs.forEach(verb => { %>
                <div class="card">
                    <div class="card-front">
                        <h2><%= verb.verb %></h2>
                    </div>
                    <div class="card-back">
                        <h2><%= verb.translation %></h2>
                        <a href="/verb-list/letter/<%= verb.verb.charAt(0).toUpperCase() %>/<%= verb.verb %>">Подробнее</a>
                    </div>
                </div>
            <% }) %>
        </div>

        <a href="/">Главная страница</a>

        <% if (typeof currentPage !== 'undefined' && typeof totalPages !== 'undefined') { %>
            <div class="pagination">
                <% if (currentPage > 1) { %>
                    <a href="/verb-list/page/<%= currentPage - 1 %>">Назад</a>
                <% } %>
                <% for (let i = 1; i <= totalPages; i++) { %>
                    <% if (i === currentPage) { %>
                        <span><%= i %></span>
                    <% } else { %>
                        <a href="/verb-list/page/<%= i %>"><%= i %></a>
                    <% } %>
                <% } %>
                <% if (currentPage < totalPages) { %>
                    <a href="/verb-list/page/<%= currentPage + 1 %>">Вперед</a>
                <% } %>
            </div>
        <% } %>
        </div>
    </div>

    <script>
        // Получаем ссылки на элементы поля поиска и окна результатов
        let searchInput = document.getElementById('searchInput');
        let searchResults = document.getElementById('searchResults');

        // Добавляем класс 'hidden' по умолчанию, чтобы скрыть окно результатов
        searchResults.classList.add('hidden');

        // Функция для отображения результатов поиска
        function displaySearchResults(verbs) {
            searchResults.innerHTML = '';
            if (verbs.length > 0) {
                const resultList = document.createElement('ul');
                verbs.forEach(verb => {
                    const listItem = document.createElement('li');
                    const link = document.createElement('a');
                    link.href = `/verb-list/letter/${verb.verb.charAt(0).toUpperCase()}/${verb.verb}`;
                    link.textContent = `${verb.verb} - ${verb.translation}`;
                    listItem.appendChild(link);
                    resultList.appendChild(listItem);
                });
                searchResults.appendChild(resultList);
            } else {
                searchResults.textContent = 'Ничего не найдено';
            }
        }

        // Функция для добавления обработчиков событий к полю поиска
        function addSearchEventListeners() {
            // Обработчик события 'input' для поля поиска
            searchInput.addEventListener('input', async () => {
                const query = searchInput.value.trim();
                if (query) {
                    // Если есть введенный текст, выполняем поиск
                    const response = await fetch(`/verb-list/search?q=${query}`);
                    const verbs = await response.json();
                    displaySearchResults(verbs);
                    // Показываем окно результатов при вводе текста
                    searchResults.classList.remove('hidden');
                } else {
                    // Если поле поиска пустое, скрываем окно результатов
                    searchResults.classList.add('hidden');
                }
            });

            // Обработчик события 'blur' для поля поиска
            searchInput.addEventListener('blur', () => {
                // Добавляем задержку перед скрытием окна результатов поиска
                setTimeout(() => {
                    searchResults.classList.add('hidden');
                }, 200);
            });

            // Обработчик события 'focus' для поля поиска
            searchInput.addEventListener('focus', () => {
                const query = searchInput.value.trim();
                if (query) {
                    // Если есть введенный текст и поле поиска в фокусе, показываем окно результатов
                    searchResults.classList.remove('hidden');
                }
            });
        }

        // Вызываем функцию для добавления обработчиков событий при загрузке страницы
        addSearchEventListeners();

        // Обработчик события 'click' для пагинации
        document.querySelector('.pagination').addEventListener('click', function (event) {
            if (event.target.tagName === 'A') {
                event.preventDefault();
                const page = event.target.getAttribute('href').split('/').pop();
                loadVerbs(page);
            }
        });

        // Функция для загрузки глаголов при переходе на другую страницу через пагинацию
        async function loadVerbs(page) {
            const response = await fetch(`/verb-list/page/${page}`);
            const html = await response.text();
            const parser = new DOMParser();
            const doc = parser.parseFromString(html, 'text/html');
            document.querySelector('body').innerHTML = doc.querySelector('body').innerHTML;
            history.pushState(null, null, `/verb-list/page/${page}`);

            // Сбрасываем состояние поля поиска и окна результатов
            searchInput.value = '';
            searchResults.innerHTML = '';
            searchResults.classList.add('hidden');

            // Привязываем обработчики событий к новым элементам (получаем новые ссылки на элементы после загрузки новой страницы)
            searchInput = document.getElementById('searchInput');
            searchResults = document.getElementById('searchResults');

            // Добавляем обработчики событий к новым элементам
            addSearchEventListeners();
        }
    </script>
  </body>
</html>